#ifndef _KEYMAP_H_
#define _KEYMAP_H_

typedef enum {
	KB_RESERVED = 0,
	KB_ESC,
	KB_1,
	KB_2,
	KB_3,
	KB_4,
	KB_5,
	KB_6,
	KB_7,
	KB_8,
	KB_9,
	KB_0,
	KB_MINUS,
	KB_EQUALS,
	KB_BACKSPACE,
	KB_TAB,
	KB_Q,
	KB_W,
	KB_E,
	KB_R,
	KB_T,
	KB_Y,
	KB_U,
	KB_I,
	KB_O,
	KB_P,
	KB_LEFTBRACE,
	KB_RIGHTBRACE,
	KB_ENTER,
	KB_LEFTCTRL,
	KB_A,
	KB_S,
	KB_D,
	KB_F,
	KB_G,
	KB_H,
	KB_J,
	KB_K,
	KB_L,
	KB_SEMICOLON,
	KB_APOSTROPHE,
	KB_GRAVE,
	KB_LEFTSHIFT,
	KB_BACKSLASH,
	KB_Z,
	KB_X,
	KB_C,
	KB_V,
	KB_B,
	KB_N,
	KB_M,
	KB_COMMA,
	KB_DOT,
	KB_SLASH,
	KB_RIGHTSHIFT,
	KB_KPASTERISK,
	KB_LEFTALT,
	KB_SPACE,
	KB_CAPSLOCK,
	KB_UP,
	KB_LEFT,
	KB_RIGHT,
	KB_DOWN,
	KB_MAX
} Keymap;

#ifdef __linux__
static const Keymap linux_to_keymap[] =  
{
	KB_RESERVED,	//KEY_RESERVED
	KB_ESC,	//KEY_ESCAPE
	KB_1,	//KEY_1
	KB_2,	//KEY_2
	KB_3,	//KEY_3
	KB_4,	//KEY_4
	KB_5,	//KEY_5
	KB_6,	//KEY_6
	KB_7,	//KEY_7
	KB_8,	//KEY_8
	KB_9,	//KEY_9
	KB_0,	//KEY_0
	KB_MINUS,	//KEY_MINUS
	KB_EQUALS,	//KEY_EQUALS
	KB_BACKSPACE,	//KEY_BACKSPACE
	KB_TAB,	//KEY_TAB
	KB_Q,	//KEY_Q
	KB_W,	//KEY_W
	KB_E,	//KEY_E
	KB_R,	//KEY_R
	KB_T,	//KEY_T
	KB_Y,	//KEY_Y
	KB_U,	//KEY_U
	KB_I,	//KEY_I
	KB_O,	//KEY_O
	KB_P,	//KEY_P
	KB_LEFTBRACE,	//KEY_LEFTBRACE   
	KB_RIGHTBRACE,	//KEY_RIGHTBRACE   
	KB_ENTER,	//KEY_ENTER
	KB_LEFTCTRL,	//KEY_LEFTCTRL is 17 correct?
	KB_A,	//KEY_A
	KB_S,	//KEY_S
	KB_D,	//KEY_D
	KB_F,	//KEY_F
	KB_G,	//KEY_G
	KB_H,	//KEY_H
	KB_J,	//KEY_J
	KB_K,	//KEY_K
	KB_L,	//KEY_L
	KB_SEMICOLON,	//KEY_SEMICOLON
	KB_APOSTROPHE,	//KEY_APOSROPHE
	KB_GRAVE,	//KEY_GRAVE not sure about this one at all
	KB_LEFTSHIFT,	//KEY_LEFTSHIFT
	KB_BACKSLASH,	//KEY_BACKSLASH ???
	KB_Z,	//KEY_Z
	KB_X,	//KEY_X
	KB_C,	//KEY_C
	KB_V,	//KEY_V
	KB_B,	//KEY_B
	KB_N,	//KEY_N
	KB_M,	//KEY_M
	KB_COMMA,	//KEY_COMMA
	KB_DOT,	//KEY_DOT
	KB_SLASH,	//KEY_SLASH 53
	KB_RIGHTSHIFT,	//KEY_RIGHTSHIFT
	KB_KPASTERISK,	//KEY_KPASTERISK
	KB_LEFTALT,	//KEY_LEFTALT
	KB_SPACE,	//KEY_SPACE
	KB_CAPSLOCK,	//KEY_CAPSLOCK
	KB_RESERVED,	//   59,	//KEY_F1
	KB_RESERVED,	//   60,	//KEY_F2
	KB_RESERVED,	//   61,	//KEY_F3
	KB_RESERVED,	//62,	//KEY_F4
	KB_RESERVED,	//63,	//KEY_F5
	KB_RESERVED,	//64,	//KEY_F6
	KB_RESERVED,	//65,	//KEY_F7
	KB_RESERVED,	//66,	//KEY_F8
	KB_RESERVED,	//67,	//KEY_F9
	KB_RESERVED,	//68,	//KEY_F10	   
	KB_RESERVED,	//69,	//KEY_NUMLOCK
	KB_RESERVED,	//70,	//KEY_SCROLLLOCL
	KB_RESERVED,	//71,	//KEY_KP7
	KB_RESERVED,	//72,	//KEY_KP8
	KB_RESERVED,	//73,	//KEY_KP9
	KB_RESERVED,	//74,	//KEY_KPMINUS
	KB_RESERVED,	//75,	//KEY_KP4
	KB_RESERVED,	//76,	//KEY_KP5
	KB_RESERVED,	//77,	//KEY_KP6
	KB_RESERVED,	//78,	//KEY_KPPLUS
	KB_RESERVED,	//79,	//KEY_KP1
	KB_RESERVED,	//80,	//KEY_KP2
	KB_RESERVED,	//81,	//KEY_KP3
	KB_RESERVED,	//82,	//KEY_KP0
	KB_RESERVED,	//83,	//KEY_KPDOT
	KB_RESERVED,	//84,	
	KB_RESERVED,	//85,	
	KB_RESERVED,	//86,	
	KB_RESERVED,	//87,	
	KB_RESERVED,	//88,	
	KB_RESERVED,	//89,	
	KB_RESERVED,	//90,
	KB_RESERVED,	//91,
	KB_RESERVED,	//92,
	KB_RESERVED,	//93,
	KB_RESERVED,	//94,	
	KB_RESERVED,	//95,	//KEY_KP_COMMA
	KB_RESERVED,	//96,	
	KB_RESERVED,	//97,	//KEY_RIGHTCTRL
	KB_RESERVED,	//98,	
	KB_RESERVED,	//99,	
	KB_RESERVED,	//100,	//KEY_RIGHTALT
	KB_RESERVED,	//101,	
	KB_RESERVED,	//102,	//KEY_HOME
	KB_UP,			//103,	//KEY_UP
	KB_RESERVED,	//104,	//KEY_PAGEUP
	KB_LEFT,		//105,	//KEY_LEFT
	KB_RIGHT,		//106,	//KEY_RIGHT
	KB_RESERVED,	//107,	//KEY_END
	KB_DOWN,		//108,	//KEY_DOWN
	KB_RESERVED,	//109,	
	KB_RESERVED,	//100,
	KB_RESERVED,	//111,
	KB_RESERVED,	//112,
	KB_RESERVED,	//113,
	KB_RESERVED,	//114,	
	KB_RESERVED,	//115,	
	KB_RESERVED,	//116,	
	KB_RESERVED,	//117,	
	KB_RESERVED,	//118,	
	KB_RESERVED,	//119,	
	KB_RESERVED,	//120 //we'll stop here for now as we've got most of the keys of interest
};
#define LINUX_KB_MAX 120

static const Keymap sdl_to_keymap[] =  
{
	KB_RESERVED,//SDL_SCANCODE_UNKNOWN = 0,
	KB_RESERVED,
	KB_RESERVED,
	KB_RESERVED,
	KB_A,//SDL_SCANCODE_A = 4,
	KB_B,//SDL_SCANCODE_B = 5,
	KB_C,//SDL_SCANCODE_C = 6,
	KB_D,//SDL_SCANCODE_D = 7,
	KB_E,//SDL_SCANCODE_E = 8,
	KB_F,//SDL_SCANCODE_F = 9,
	KB_G,//SDL_SCANCODE_G = 10,
	KB_H,//SDL_SCANCODE_H = 11,
	KB_I,//SDL_SCANCODE_I = 12,
	KB_J,//SDL_SCANCODE_J = 13,
	KB_K,//SDL_SCANCODE_K = 14,
	KB_L,//SDL_SCANCODE_L = 15,
	KB_M,//SDL_SCANCODE_M = 16,
	KB_N,//SDL_SCANCODE_N = 17,
	KB_O,//SDL_SCANCODE_O = 18,
	KB_P,//SDL_SCANCODE_P = 19,
	KB_Q,//SDL_SCANCODE_Q = 20,
	KB_R,//SDL_SCANCODE_R = 21,
	KB_S,//SDL_SCANCODE_S = 22,
	KB_T,//SDL_SCANCODE_T = 23,
	KB_U,//SDL_SCANCODE_U = 24,
	KB_V,//SDL_SCANCODE_V = 25,
	KB_W,//SDL_SCANCODE_W = 26,
	KB_X,//SDL_SCANCODE_X = 27,
	KB_Y,//SDL_SCANCODE_Y = 28,
	KB_Z,//SDL_SCANCODE_Z = 29,
	KB_1,//SDL_SCANCODE_1 = 30,
	KB_2,//SDL_SCANCODE_2 = 31,
	KB_3,//SDL_SCANCODE_3 = 32,
	KB_4,//SDL_SCANCODE_4 = 33,
	KB_5,//SDL_SCANCODE_5 = 34,
	KB_6,//SDL_SCANCODE_6 = 35,
	KB_7,//SDL_SCANCODE_7 = 36,
	KB_8,//SDL_SCANCODE_8 = 37,
	KB_9,//SDL_SCANCODE_9 = 38,
	KB_0,//SDL_SCANCODE_0 = 39,
	KB_ENTER,//SDL_SCANCODE_RETURN = 40,
	KB_ESC,//SDL_SCANCODE_ESCAPE = 41,
	KB_BACKSLASH,//SDL_SCANCODE_BACKSPACE = 42,
	KB_TAB,//SDL_SCANCODE_TAB = 43,
	KB_SPACE,//SDL_SCANCODE_SPACE = 44,
	KB_MINUS,//SDL_SCANCODE_MINUS = 45,
	KB_EQUALS,//SDL_SCANCODE_EQUALS = 46,
	KB_RESERVED,//SDL_SCANCODE_LEFTBRACKET = 47,
	KB_RESERVED,//SDL_SCANCODE_RIGHTBRACKET = 48,
	KB_RESERVED,//SDL_SCANCODE_BACKSLASH = 49,
	KB_RESERVED,//SDL_SCANCODE_NONUSHASH = 50,
	KB_RESERVED,//SDL_SCANCODE_SEMICOLON = 51,
	KB_RESERVED,//SDL_SCANCODE_APOSTROPHE = 52,
	KB_RESERVED,//SDL_SCANCODE_GRAVE = 53,
	KB_RESERVED,//SDL_SCANCODE_COMMA = 54,
	KB_RESERVED,//SDL_SCANCODE_PERIOD = 55,
	KB_RESERVED,//SDL_SCANCODE_SLASH = 56,
	KB_RESERVED,//SDL_SCANCODE_CAPSLOCK = 57,
	KB_RESERVED,//SDL_SCANCODE_F1 = 58,
	KB_RESERVED,//SDL_SCANCODE_F2 = 59,
	KB_RESERVED,//SDL_SCANCODE_F3 = 60,
	KB_RESERVED,//SDL_SCANCODE_F4 = 61,
	KB_RESERVED,//SDL_SCANCODE_F5 = 62,
	KB_RESERVED,//SDL_SCANCODE_F6 = 63,
	KB_RESERVED,//SDL_SCANCODE_F7 = 64,
	KB_RESERVED,//SDL_SCANCODE_F8 = 65,
	KB_RESERVED,//SDL_SCANCODE_F9 = 66,
	KB_RESERVED,//SDL_SCANCODE_F10 = 67,
	KB_RESERVED,//SDL_SCANCODE_F11 = 68,
	KB_RESERVED,//SDL_SCANCODE_F12 = 69,
	KB_RESERVED,//SDL_SCANCODE_PRINTSCREEN = 70,
	KB_RESERVED,//SDL_SCANCODE_SCROLLLOCK = 71,
	KB_RESERVED,//SDL_SCANCODE_PAUSE = 72,
	KB_RESERVED,//SDL_SCANCODE_INSERT = 73,
	KB_RESERVED,//SDL_SCANCODE_HOME = 74,
	KB_RESERVED,//SDL_SCANCODE_PAGEUP = 75,
	KB_RESERVED,//SDL_SCANCODE_DELETE = 76,
	KB_RESERVED,//SDL_SCANCODE_END = 77,
	KB_RESERVED,//SDL_SCANCODE_PAGEDOWN = 78,
	KB_RIGHT,//SDL_SCANCODE_RIGHT = 79,
	KB_LEFT,//SDL_SCANCODE_LEFT = 80,
	KB_DOWN,//SDL_SCANCODE_DOWN = 81,
	KB_UP,//SDL_SCANCODE_UP = 82,
	KB_RESERVED,//SDL_SCANCODE_NUMLOCKCLEAR = 83,
	KB_RESERVED,//SDL_SCANCODE_KP_DIVIDE = 84,
	KB_RESERVED,//SDL_SCANCODE_KP_MULTIPLY = 85,
	KB_RESERVED,//SDL_SCANCODE_KP_MINUS = 86,
	KB_RESERVED,//SDL_SCANCODE_KP_PLUS = 87,
	KB_RESERVED,//SDL_SCANCODE_KP_ENTER = 88,
	KB_RESERVED,//SDL_SCANCODE_KP_1 = 89,
	KB_RESERVED,//SDL_SCANCODE_KP_2 = 90,
	KB_RESERVED,//SDL_SCANCODE_KP_3 = 91,
	KB_RESERVED,//SDL_SCANCODE_KP_4 = 92,
	KB_RESERVED,//SDL_SCANCODE_KP_5 = 93,
	KB_RESERVED,//SDL_SCANCODE_KP_6 = 94,
	KB_RESERVED,//SDL_SCANCODE_KP_7 = 95,
	KB_RESERVED,//SDL_SCANCODE_KP_8 = 96,
	KB_RESERVED,//SDL_SCANCODE_KP_9 = 97,
	KB_RESERVED,//SDL_SCANCODE_KP_0 = 98,
	KB_RESERVED,//SDL_SCANCODE_KP_PERIOD = 99,
	KB_RESERVED,//SDL_SCANCODE_NONUSBACKSLASH = 100,
	KB_RESERVED,//SDL_SCANCODE_APPLICATION = 101,
	KB_RESERVED,//SDL_SCANCODE_POWER = 102,
	KB_RESERVED,//SDL_SCANCODE_KP_EQUALS = 103,
	KB_RESERVED,//SDL_SCANCODE_F13 = 104,
	KB_RESERVED,//SDL_SCANCODE_F14 = 105,
	KB_RESERVED,//SDL_SCANCODE_F15 = 106,
	KB_RESERVED,//SDL_SCANCODE_F16 = 107,
	KB_RESERVED,//SDL_SCANCODE_F17 = 108,
	KB_RESERVED,//SDL_SCANCODE_F18 = 109,
	KB_RESERVED,//SDL_SCANCODE_F19 = 110,
	KB_RESERVED,//SDL_SCANCODE_F20 = 111,
	KB_RESERVED,//SDL_SCANCODE_F21 = 112,
	KB_RESERVED,//SDL_SCANCODE_F22 = 113,
	KB_RESERVED,//SDL_SCANCODE_F23 = 114,
	KB_RESERVED,//SDL_SCANCODE_F24 = 115,
	KB_RESERVED,//SDL_SCANCODE_EXECUTE = 116,
	KB_RESERVED,//SDL_SCANCODE_HELP = 117,
	KB_RESERVED,//SDL_SCANCODE_MENU = 118,
	KB_RESERVED,//SDL_SCANCODE_SELECT = 119,
	KB_RESERVED,//SDL_SCANCODE_STOP = 120,
	KB_RESERVED,//SDL_SCANCODE_AGAIN = 121,
	KB_RESERVED,//SDL_SCANCODE_UNDO = 122,
	KB_RESERVED,//SDL_SCANCODE_CUT = 123,
	KB_RESERVED,//SDL_SCANCODE_COPY = 124,
	KB_RESERVED,//SDL_SCANCODE_PASTE = 125,
	KB_RESERVED,//SDL_SCANCODE_FIND = 126,
	KB_RESERVED,//SDL_SCANCODE_MUTE = 127,
	KB_RESERVED,//SDL_SCANCODE_VOLUMEUP = 128,
	KB_RESERVED,//SDL_SCANCODE_VOLUMEDOWN = 129
};
#define SDL_KB_MAX 129
#endif

#endif //_KEYMAP_H_